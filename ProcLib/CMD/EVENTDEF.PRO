//==========================================================================
// EVENTDEF.PRO
//   Description: Setup all event codes. Sorted by code for easy tracing of duplicates.
//                This file was generated by EventDefSorted.m matlab file that processes
//                the original EVENTDEF.PRO file and writes eventDefSorted.pro file.
//                Manually renamed the new file, eventDefSorted.pro, as EVENTDEF.PRO and
//                the original file as EVENTDEF_ORI.PRO for TEMPO.
//                Any event code must be below 3000, since 3000 and above are used for
//                "coding" trial Infos in INFOS.PRO file. Keeping the Event codes
//                sorted will help in adding (inserting) any additional event codes that
//                may be needed while avoinding duplicates
//   Author: chenchal.subraveti@vanderbilt.edu
//   Date: 2019-01-07
//==========================================================================
//  Revision History:
//  001: 2019/01/07 chenchal subraveti
//       These codes are all global variables. Code names are used as is in translation.
//       Comments are imported for older EVENTCODES.PRO file and inserted at
//       appropriate locations.
// 002: 2019/01/08 chenchal subravtei
//      Added/modified event codes:
//      PDTriggerLeft_  = 2990 and
//      PDTriggerRight_ = 2991
//

declare constant ShamStim_      = 665;
declare constant Stimulation_   = 666;
declare constant EndStim_       = 667;
declare constant StimFailed_    = 668;
declare constant Error_tone     = 776;
declare constant Reward_tone    = 777;
declare constant Error_sacc     = 887;
declare constant Correct_sacc   = 888;
declare constant VSyncRefresh_  = 999;
declare constant Identify_Room_ = 1500;
declare constant CmanHeader_    = 1501;
declare constant MemHeader_     = 1502;
declare constant GONOGOHeader_  = 1503;
declare constant DelayedHeader_ = 1504;
declare constant SearchHeader_  = 1507;
declare constant CaptureHeader_ = 1508;
declare constant AntiHeader_    = 1509;

declare constant TrialGetReady_  = 1664;
declare constant TrialReady_     = 1665;
declare constant TrialStart_    = 1666;
declare constant Eot_           = 1667;
declare constant Tone_          = 2001;
declare constant PunishEnd_     = 2002;
declare constant ITIStart_      = 2124;
declare constant ITIEnd_        = 2125;
declare constant ExtraReward_   = 2127;
declare constant FixSpotOff_    = 2300;
declare constant FixSpotOn_     = 2301;
//Note that this is followed by a 1 or a 2 if MultElectrodeStimFlag is set depending on the stim channel
declare constant ZeroEyePosition_ = 2302;
declare constant PlacOn_          = 2320;
declare constant Correct_         = 2600;
declare constant Abort_           = 2620;
// MUST CHECK IN TRANSLATED VARIABLES (MY VERSION DIED WITHOUT NETWORK)
declare constant TargetPre_  = 2650;
declare constant Target_     = 2651;
declare constant TargetOff_  = 2652;
declare constant StopSignal_ = 2653;
// MUST CHECK IN TRANSLATED VARIABLES (MY VERSION DIED WITHOUT NETWORK)
declare constant StopOn_           = 2654;
declare constant MouthBegin_       = 2655;
declare constant MouthEnd_         = 2656;

declare constant FixNotAcquired_   = 2657;
declare constant AcquireFix_       = 2658;
declare constant Fixate_           = 2659;
declare constant BreakFix_         = 2660;

declare constant CueOn_            = 2661;
declare constant AcquireTarget_    = 2670;
declare constant AcquireTargetSlow_= 2671;
declare constant TaskEnd_          = 2680;
declare constant TaskStart_        = 2681;
declare constant Reward_           = 2727;
declare constant FixError_         = 2750;
declare constant GoSaccade_        = 2751;
declare constant GoError_          = 2752;
declare constant NOGOWrong_        = 2753;
declare constant GoTargFixError_   = 2754;
declare constant GOCorrect_        = 2755;
declare constant NOGOCorrect_      = 2756;
declare constant CatchCorrect_     = 2757;
declare constant CatchIncorrectG_  = 2758;
declare constant CatchIncorrectNG_ = 2759;
declare constant TargetBreakFix_   = 2760;
declare constant EarlySaccade_     = 2761;
declare constant LateSaccade_      = 2762;
declare constant FixWindow_        = 2770;
declare constant TargetWindow_     = 2771;
// MUST CHECK IN TRANSLATED VARIABLES (MY VERSION DIED WITHOUT NETWORK)
declare constant Staircase_ = 2772;
// MUST CHECK IN TRANSLATED VARIABLES (MY VERSION DIED WITHOUT NETWORK)
declare constant Neg2Reinforcement_ = 2773;
// MUST CHECK IN TRANSLATED VARIABLES (MY VERSION DIED WITHOUT NETWORK)
declare constant Feedback_      = 2774;
declare constant ReturnToFix_   = 2775;
declare constant JuiceEnd_      = 2776;
declare constant JuiceStart_    = 2777;
declare constant SoundOnReward_ = 2778;
declare constant SoundNoReward_ = 2779;
declare constant Saccade_       = 2810;
declare constant Decide_        = 2811;
declare constant StimHelp_      = 2820;
//Note followed by another TTL == 2820 + trials[1] (looks like it classifies trial type)
// MUST CHECK IN TRANSLATED VARIABLES (MY VERSION DIED WITHOUT NETWORK)
declare constant RewardSize_ = 2927;
// MUST CHECK IN TRANSLATED VARIABLES (MY VERSION DIED WITHOUT NETWORK)
declare constant TrialInBlock = 2928;
// MUST CHECK IN TRANSLATED VARIABLES (MY VERSION DIED WITHOUT NETWORK)
declare constant SendPenatrInfo_ = 2929;

declare constant PDTriggerLeft_  = 2990;
declare constant PDTriggerRight_ = 2991;
declare constant StartInfos_     = 2998;
declare constant EndInfos_       = 2999;
declare constant InfosZero       = 3000;
// declare hide constant SendStimInfo_  = 7000;
